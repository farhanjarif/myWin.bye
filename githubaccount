import requests
import pytest
from unittest.mock import patch


username = "farhanjarif"
check_github_user(username)

def check_github_user(username):
    url = f"https://api.github.com/users/{username}"
    response = requests.get(url)
    
    if response.status_code == 200:
        return True
    elif response.status_code == 404:
        return False
    else:
        raise Exception(f"Unexpected error: {response.status_code} - {response.text}")

def test_valid_username():
    assert check_github_user("octocat") == True

def test_invalid_username():
    assert check_github_user("nonexistentusername12345") == False

def test_rate_limit_exceeded():
    with patch('requests.get') as mock_get:
        mock_get.return_value.status_code = 403
        try:
            check_github_user("octocat")
        except Exception as e:
            assert str(e) == "Unexpected error: 403 - None"

def test_unexpected_error():
    with patch('requests.get') as mock_get:
        mock_get.return_value.status_code = 500
        try:
            check_github_user("octocat")
        except Exception as e:
            assert str(e) == "Unexpected error: 500 - None"

if __name__ == "__main__":
    pytest.main()
